{"version":3,"sources":["Components/Example.js","Components/PropList.js","Docs/InfoCard.js"],"names":["ExampleContent","props","io","useSystem","moduleName","children","Example","modules","ExampleModule","name","component","className","style","margin","gist","homeModule","saveSettings","id","token","undefined","localStorage","setItem","getSettings","getItem","PropList","title","items","map","p","i","key","type","desc","InfoCardDocs","stripe","display","stripeColor","width","dynamicX","onClick","console","log","height","innerStyle","backgroundColor","color","fontWeight"],"mappings":"gNAMA,SAASA,EAAeC,GAAO,IAEvBC,EAAMC,cAAND,GAEP,OACC,kBAAC,IAAD,CAAQE,WAAW,iBACjBF,EAAGG,UAOQ,SAASC,EAAQL,GAE/B,IAAMM,EAAU,CACfC,cAAe,CACdC,KAAM,gBACNC,UAAWV,IAgBb,OACC,yBAAKW,UAAW,UAAUC,MAASX,EAAMW,OAExC,yBAAKD,UAAU,mBAAmBC,MAAK,2BACnCX,EAAMW,OAD6B,IAEtCC,OAAQZ,EAAMa,KAAO,UAAY,QAEjC,kBAAC,IAAD,CACCC,WAAa,gBACbR,QAAWA,EACXS,aAtBJ,SAAsBC,EAAIC,QACEC,WAAjBC,cACTA,aAAaC,QAAQJ,EAAIC,IAqBvBI,YAjBJ,SAAqBL,GACpB,QAA4BE,WAAjBC,aACV,OAAOA,aAAaG,QAAQN,IAgB1Bf,GAAI,CACHG,SAAUJ,EAAMI,aAMnBJ,EAAMa,KAAO,yBAAKH,UAAU,cAC5B,kBAAC,IAAD,CAAMM,GAAIhB,EAAMa,QACR,Q,qDC7DX,4DAIe,SAASU,EAASvB,GAChC,OACC,yBAAKU,UAAU,YACd,4BAAKV,EAAMwB,MAAQxB,EAAMwB,MAAQ,SAEjC,+BACC,+BACExB,EAAMyB,MAAMC,KAAI,SAACC,EAAGC,GACpB,OAAO,wBAAIC,IAAOD,GACjB,wBAAIlB,UAAU,QAAQiB,EAAEnB,MACxB,wBAAIE,UAAU,QAAQiB,EAAEG,MACxB,wBAAIpB,UAAU,QAAQiB,EAAEI,e,qDCf/B,2FAKe,SAASC,IAEvB,OACC,6BACC,wCADD,4CAIC,4BAEA,kBAAC,IAAD,CAASnB,KAAK,oCAEb,kBAAC,IAAD,CAAUoB,QAAM,EAACT,MAAM,aAAvB,6BAIA,yBAAKb,MAAO,CAACuB,QAAQ,SACpB,kBAAC,IAAD,CAAUC,YAAY,MAAMxB,MAAO,CAACyB,MAAM,QAA1C,2BAIA,kBAAC,IAAD,CAAUD,YAAY,SAASxB,MAAO,CAACyB,MAAM,QAA7C,WAIA,kBAAC,IAAD,CAAUD,YAAY,QAAQxB,MAAO,CAACyB,MAAM,QAA5C,WAMD,kBAAC,IAAD,CACCH,QAAM,EACNI,UAAQ,EACRC,QAAS,WAAQC,QAAQC,IAAI,kBAE7B,+CALD,yCAWD,wDAtCD,wPAyCC,6BAzCD,uNA6CC,4BACA,kBAAC,IAAD,CAAS3B,KAAK,oCACb,kBAAC,IAAD,CACCF,MAAO,CAACyB,MAAO,MAAOK,OAAQ,SAC9BC,WAAY,CAAEC,gBAAiB,UAAWC,MAAM,UAAWC,WAAY,SAFxE,qBAQD,8CACA,kBAAC,IAAD,CAAUrB,MAAM,IAAIC,MAAO,CAC1B,CAACjB,KAAM,SAAUsB,KAAK,UAAWC,KAAM,yCACvC,CAACvB,KAAM,cAAesB,KAAK,qBAAsBC,KAAM,0BACvD,CAACvB,KAAM,QAASsB,KAAK,SAAUC,KAAM,sCACrC,CAACvB,KAAM,SAAUsB,KAAK,UAAWC,KAAM,oEACvC,CAACvB,KAAM,SAAUsB,KAAK,UAAWC,KAAM,sDACvC,CAACvB,KAAM,UAAWsB,KAAK,WAAYC,KAAM,wBACzC,CAACvB,KAAM,UAAWsB,KAAK,WAAYC,KAAM,4DACzC,CAACvB,KAAM,QAASsB,KAAK,iBAAkBC,KAAM,sDAC7C,CAACvB,KAAM,aAAcsB,KAAK,iBAAkBC,KAAM","file":"static/js/15.5e437418.chunk.js","sourcesContent":["import React from 'react'\nimport './Example.css'\nimport {TouchPointApp, useSystem, Module} from 'touchpoint-ui'\nimport Gist from 'react-gist'\nimport propTypes from 'prop-types'\n\nfunction ExampleContent(props){\n\t\n\tconst {io} = useSystem()\n\t\n\treturn(\n\t\t<Module moduleName='ExampleModule'>\n\t\t\t{io.children}\n\t\t</Module>\n\t)\n\t\n}\n\n//...\nexport default function Example(props) {\n\t\n\tconst modules = {\n\t\tExampleModule: {\n\t\t\tname: 'ExampleModule',\n\t\t\tcomponent: ExampleContent\n\t\t}\n\t}\n\t\n\tfunction saveSettings(id, token){\n\t\tif(typeof localStorage !== undefined){\n\t\t\tlocalStorage.setItem(id, token)\n\t\t}\n\t}\n\t\n\tfunction getSettings(id) {\n\t\tif (typeof localStorage !== undefined) {\n\t\t\treturn localStorage.getItem(id)\n\t\t}\n\t}\n\t\n\treturn (\n\t\t<div className= 'Example' style = {props.style}>\n\t\t\t\n\t\t\t<div className=\"exampleContainer\" style={{ \n\t\t\t\t...props.style, \n\t\t\t\tmargin: props.gist ? '0px 7px' : null,\n\t\t\t}}>\n\t\t\t\t<TouchPointApp\n\t\t\t\t\thomeModule = 'ExampleModule'\n\t\t\t\t\tmodules = {modules}\n\t\t\t\t\tsaveSettings = {saveSettings}\n\t\t\t\t\tgetSettings = {getSettings}\n\t\t\t\t\tio={{\n\t\t\t\t\t\tchildren: props.children\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\n\t\t\n\t\t{props.gist ? <div className='sourceCode'>\n\t\t\t<Gist id={props.gist} />\n\t\t</div> : null}\n\n\t</div>\n\t)\n}\n\nExample.propTypes = {\n\tgist: propTypes.string\n}","import React from 'react'\nimport propTypes from 'prop-types'\nimport './PropList.css'\n\nexport default function PropList(props) {\n\treturn (\n\t\t<div className='PropList'>\n\t\t\t<h5>{props.title ? props.title : 'Props'}</h5>\n\t\t\t\n\t\t\t<table>\n\t\t\t\t<tbody>\n\t\t\t\t\t{props.items.map((p, i)=>{\n\t\t\t\t\t\treturn <tr key = {i}>\n\t\t\t\t\t\t\t<td className='name'>{p.name}</td>\n\t\t\t\t\t\t\t<td className='type'>{p.type}</td>\n\t\t\t\t\t\t\t<td className='desc'>{p.desc}</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t})}\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</div>\n\t)\n}\n\n//\nPropList.propTypes={\n\titems: propTypes.arrayOf(propTypes.shape({\n\t\tname: propTypes.string,\n\t\ttype: propTypes.string,\n\t\tdesc: propTypes.string,\n\t})).isRequired,\n\ttitle: propTypes.string,\n}","import React from 'react'\nimport Example from '../Components/Example'\nimport {InfoCard} from 'touchpoint-ui'\nimport PropList from '../Components/PropList'\n\nexport default function InfoCardDocs() {\n\n\treturn (\n\t\t<div>\n\t\t\t<h1>InfoCard</h1>\n\t\t\tA pretty container for whatever you need! \n\t\t\t\n\t\t\t<p></p>\n\t\t\t\n\t\t\t<Example gist='1527b284877f7d1dc342f3344049a070'>\n\t\t\t\t\n\t\t\t\t<InfoCard stripe title='Hey there'> \n\t\t\t\t\tAdd a stripe and a title!\n\t\t\t\t</InfoCard>\n\t\t\t\t\n\t\t\t\t<div style={{display:'flex'}}>\n\t\t\t\t\t<InfoCard stripeColor='red' style={{width:'33%'}}>\n\t\t\t\t\t\tCustomize stripe color!\n\t\t\t\t\t</InfoCard>\n\t\t\t\t\t\n\t\t\t\t\t<InfoCard stripeColor='Orange' style={{width:'33%'}}>\n\t\t\t\t\t\tYellow!\n\t\t\t\t\t</InfoCard>\n\t\t\t\t\t\n\t\t\t\t\t<InfoCard stripeColor='Green' style={{width:'34%'}}>\n\t\t\t\t\t\tGreen!\n\t\t\t\t\t</InfoCard>\n\t\t\t\t</div>\n\t\t\t\t\n\n\t\t\t\t<InfoCard \n\t\t\t\t\tstripe \n\t\t\t\t\tdynamicX \n\t\t\t\t\tonClick={() => { console.log('Hello World!') }}\n\t\t\t\t>\n\t\t\t\t\t<label>Guess what? </label>Dynamic cards for clickable content!\n\t\t\t\t</InfoCard>\n\t\t\t\t\n\t\t\t\t\n\t\t\t</Example>\n\t\t\t\n\t\t\t<h3>Custom Styling InfoCards</h3>\n\t\t\tSince InfoCards are made up of a container div, and the actual card div insid of that, stying the inner card can be done using the innerStyle prop. \n\t\t\tThis works the same as passing a style prop to any DOM element, but will apply to the inner card. \n\t\t\t<br/>\n\t\t\tFor example, if you wanted to change teh size of the card, you would use 'style' like usual. But if you wanted to change the background color, or the border radius, you would use innerStyle.\n\t\t\tSee the exampe below. \n\t\t\t\t\t\n\t\t\t<p></p>\n\t\t\t<Example gist='ae619a098b2e9be36038dfb8b8a92dd3'>\n\t\t\t\t<InfoCard \n\t\t\t\t\tstyle={{width: '50%', height: '200px'}}\n\t\t\t\t\tinnerStyle={{ backgroundColor: '#001f3f', color:'#0074D9', fontWeight: 'bold' }}\n\t\t\t\t>\n\t\t\t\t\tMy content here!\n\t\t\t\t</InfoCard>\n\t\t\t</Example>\n\t\t\t\n\t\t\t<h3>InfoCard props</h3>\n\t\t\t<PropList title=' ' items={[\n\t\t\t\t{name: 'stripe', type:'boolean', desc: 'Adds a stripe to the side of the card'},\n\t\t\t\t{name: 'stripeColor', type:'string (css color)', desc: 'Colors the card stripe'},\n\t\t\t\t{name: 'title', type:'string', desc: 'The title of the card... obviously'},\n\t\t\t\t{name: 'locked', type:'boolean', desc: 'Locks all contents of the card (see permissions API for details)'},\n\t\t\t\t{name: 'hidden', type:'boolean', desc: 'Hides the card from view. Component will not mount'},\n\t\t\t\t{name: 'onClick', type:'function', desc: 'Click event handler.'},\n\t\t\t\t{name: 'onClose', type:'function', desc: 'Adds a close button to the card with this event handler.'},\n\t\t\t\t{name: 'style', type:'object (style)', desc: 'Styling for the card container (size, position...)'},\n\t\t\t\t{name: 'innerStyle', type:'object (style)', desc: 'Styling for the card itself (color and most other things)'},\n\t\t\t]}/>\n\t\t\t\n\t\t</div>\n\t)\n}\n"],"sourceRoot":""}