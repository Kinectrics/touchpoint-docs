{"version":3,"sources":["Components/Example.js","Components/PropList.js","Docs/Tabs.js"],"names":["ExampleContent","props","io","useSystem","moduleName","children","Example","modules","ExampleModule","name","component","className","style","margin","gist","homeModule","saveSettings","id","token","undefined","localStorage","setItem","getSettings","getItem","PropList","title","items","map","p","i","key","type","desc","InnerTabs","useState","tabState","setTabState","changeTabs","defaultTab","activeTab","tabID","stripe","marginLeft","onClick","stripeColor","purpose","Tabs","tabTitle"],"mappings":"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","file":"static/js/9.7a74cc83.chunk.js","sourcesContent":["import React from 'react'\nimport './Example.css'\nimport {TouchPointApp, useSystem, Module} from 'touchpoint-ui'\nimport Gist from 'react-gist'\nimport propTypes from 'prop-types'\n\nfunction ExampleContent(props){\n\t\n\tconst {io} = useSystem()\n\t\n\treturn(\n\t\t<Module moduleName='ExampleModule'>\n\t\t\t{io.children}\n\t\t</Module>\n\t)\n\t\n}\n\n//...\nexport default function Example(props) {\n\t\n\tconst modules = {\n\t\tExampleModule: {\n\t\t\tname: 'ExampleModule',\n\t\t\tcomponent: ExampleContent\n\t\t}\n\t}\n\t\n\tfunction saveSettings(id, token){\n\t\tif(typeof localStorage !== undefined){\n\t\t\tlocalStorage.setItem(id, token)\n\t\t}\n\t}\n\t\n\tfunction getSettings(id) {\n\t\tif (typeof localStorage !== undefined) {\n\t\t\treturn localStorage.getItem(id)\n\t\t}\n\t}\n\t\n\treturn (\n\t\t<div className= 'Example' style = {props.style}>\n\t\t\t\n\t\t\t<div className=\"exampleContainer\" style={{ \n\t\t\t\t...props.style, \n\t\t\t\tmargin: props.gist ? '0px 7px' : null,\n\t\t\t}}>\n\t\t\t\t<TouchPointApp\n\t\t\t\t\thomeModule = 'ExampleModule'\n\t\t\t\t\tmodules = {modules}\n\t\t\t\t\tsaveSettings = {saveSettings}\n\t\t\t\t\tgetSettings = {getSettings}\n\t\t\t\t\tio={{\n\t\t\t\t\t\tchildren: props.children\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\n\t\t\n\t\t{props.gist ? <div className='sourceCode'>\n\t\t\t<Gist id={props.gist} />\n\t\t</div> : null}\n\n\t</div>\n\t)\n}\n\nExample.propTypes = {\n\tgist: propTypes.string\n}","import React from 'react'\nimport propTypes from 'prop-types'\nimport './PropList.css'\n\nexport default function PropList(props) {\n\treturn (\n\t\t<div className='PropList'>\n\t\t\t<h5>{props.title ? props.title : 'Props'}</h5>\n\t\t\t\n\t\t\t<table>\n\t\t\t\t<tbody>\n\t\t\t\t\t{props.items.map((p, i)=>{\n\t\t\t\t\t\treturn <tr key = {i}>\n\t\t\t\t\t\t\t<td className='name'>{p.name}</td>\n\t\t\t\t\t\t\t<td className='type'>{p.type}</td>\n\t\t\t\t\t\t\t<td className='desc'>{p.desc}</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t})}\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</div>\n\t)\n}\n\n//\nPropList.propTypes={\n\titems: propTypes.arrayOf(propTypes.shape({\n\t\tname: propTypes.string,\n\t\ttype: propTypes.string,\n\t\tdesc: propTypes.string,\n\t})).isRequired,\n\ttitle: propTypes.string,\n}","import React from 'react'\nimport Example from '../Components/Example'\nimport {InfoTabContainer, InfoTab, ControlledTabContainer, InfoCard, FreeButton} from 'touchpoint-ui'\nimport './TabFix.css'\nimport { useState } from 'react'\nimport PropList from '../Components/PropList'\n\n\nfunction InnerTabs(props){\n\t\n\tconst [tabState, setTabState] = useState('tab1')\n\n\tfunction changeTabs() {\n\t\tif (tabState === 'tab1') {\n\t\t\tsetTabState('tab2')\n\t\t} else {\n\t\t\tsetTabState('tab1')\n\t\t}\n\t}\n\t\n\treturn (<ControlledTabContainer defaultTab='tab1' activeTab={tabState}>\n\n\t\t<InfoTab tabID='tab1'>\n\t\t\t<InfoCard stripe>\n\t\t\t\tHello from Tab 1\n\t\t\t\t\t\t\t\t<FreeButton style={{ marginLeft: '20px' }} onClick={changeTabs}>Switch Tabs</FreeButton>\n\t\t\t</InfoCard>\n\t\t</InfoTab>\n\n\t\t<InfoTab tabID='tab2'>\n\t\t\t<InfoCard stripeColor='red'>\n\t\t\t\tHello from tab 2\n\t\t\t\t\t\t\t\t<FreeButton style={{ marginLeft: '20px' }} purpose='negative' onClick={changeTabs}>Switch Tabs</FreeButton>\n\t\t\t</InfoCard>\n\n\t\t</InfoTab>\n\n\t</ControlledTabContainer>)\n}\n\nexport default function Tabs() {\n\n\treturn (\n\t\t<div>\n\t\t\t<div id=\"InfoTabContainer\">\n\t\t\t\t<h1>InfoTabContainer</h1>\n\t\t\t\tA traditional tabbed view. Create an InfoTabContainer and put InfoTabs inside to create tabs. Then put your content in the InfoTabs.\n\t\t\t\t\n\t\t\t\t<p></p>\n\t\t\t\t<Example gist='25480c1689ceec6f00e86f0f632ae157'>\n\t\t\t\t\t<InfoTabContainer defaultTab='tab1'>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<InfoTab tabTitle='My Tab 1' tabID='tab1'>\n\t\t\t\t\t\t\t<InfoCard stripe>\n\t\t\t\t\t\t\t\tHello from Tab 1\n\t\t\t\t\t\t\t</InfoCard>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<InfoCard stripeColor='red'>\n\t\t\t\t\t\t\t\tTabs are useful\n\t\t\t\t\t\t\t</InfoCard>\n\t\t\t\t\t\t</InfoTab>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<InfoTab tabTitle='My Second Tab' tabID='tab2'>\n\t\t\t\t\t\t\t<InfoCard stripe>\n\t\t\t\t\t\t\t\tHello from tab 2!\n\t\t\t\t\t\t\t</InfoCard>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<InfoCard stripeColor='Green'>\n\t\t\t\t\t\t\t\tLook!\n\t\t\t\t\t\t\t</InfoCard>\n\t\t\t\t\t\t</InfoTab>\n\t\t\t\t\t\t\n\t\t\t\t\t</InfoTabContainer>\n\t\t\t\t</Example>\n\t\t\t\t\n\t\t\t\t<PropList title='InfoTabContainer props' items={[\n\t\t\t\t\t{ name: 'defaultTab', type: 'string', desc: \"Default tabe when the component first renders\" },\n\t\t\t\t\t{ name: 'locked', type: 'boolean', desc: 'Locks all tabs and their content. You can still open the tabs themselves.' },\n\t\t\t\t\t{ name: 'hidden', type: 'boolean', desc: 'Hides the whole tab group completely' },\n\t\t\t\t]} />\n\t\t\t\t\t\t\t\n\t\t\t</div>\n\t\t\t\n\t\t\t<div id=\"ControlledTabContainer\">\n\t\t\t\t<h1>ControlledTabContainer</h1>\n\t\t\t\tTab container without any tab header or buttons and minimal style features. Lets you control the open tab yourself through the ActiveTab prop.\n\t\t\t\t\n\t\t\t\t<Example gist='19ae5ef59a7f56b698a12b1388767612'>\n\t\t\t\t\t<InnerTabs/>\n\t\t\t\t</Example>\n\t\t\t\t\n\t\t\t\t<PropList title='ControlledTabContainer props' items={[\n\t\t\t\t\t{ name: 'activeTab', type: 'string', desc: \"Name of the tab to display. Usually liked to some state, but I can't tell you what to do! \" },\n\t\t\t\t\t{ name: 'defaultTab', type: 'string', desc: \"Default tabe when the component first renders\" },\n\t\t\t\t\t{ name: 'locked', type: 'boolean', desc: 'Locks all tabs and their content. You can still open the tabs themselves.' },\n\t\t\t\t\t{ name: 'hidden', type: 'boolean', desc: 'Hides the whole tab group completely' },\n\t\t\t\t]} />\n\t\t\t\t\n\t\t\t</div>\n\t\t\t\n\t\t\t<div id=\"InfoTab\">\n\t\t\t\t<h1>InfoTab</h1>\n\t\t\t\tUse this component to define a tab inside an InfoTabContainer or ControlledTabContainer. Components will stay mounted even when you switch tabs, so they will persist their state as you switch back and forth between them.\n\t\t\t\tSee examples above.\n\t\t\t\t\n\t\t\t\t<PropList title = 'InfoTab props' items={[\n\t\t\t\t\t{name:'tabID', type:'string', desc: 'Unique identifier for the tab'},\n\t\t\t\t\t{name:'tabTitle', type:'string', desc: 'Tab title to be displayed'},\n\t\t\t\t\t{name:'locked', type:'boolean', desc: 'Locks the tab contents. You can still open the tab itself'},\n\t\t\t\t\t{name:'hidden', type:'boolean', desc: 'Hides the tab completely'},\n\t\t\t\t\t{name:'style', type:'object (style)', desc: 'Optional custom styling'},\n\t\t\t\t]}/>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n"],"sourceRoot":""}