{"version":3,"sources":["Components/Example.js","Docs/Permissions.js"],"names":["ExampleContent","props","io","useSystem","moduleName","children","Example","modules","ExampleModule","name","component","className","style","margin","gist","homeModule","saveSettings","id","token","undefined","localStorage","setItem","getSettings","getItem","Permissions","InnerComponent","Popup","clickHandler","open","useState","lockedState","setLockedState","onClick","purpose","stripe","title","locked"],"mappings":"gNAMA,SAASA,EAAeC,GAAO,IAEvBC,EAAMC,cAAND,GAEP,OACC,kBAAC,IAAD,CAAQE,WAAW,iBACjBF,EAAGG,UAOQ,SAASC,EAAQL,GAE/B,IAAMM,EAAU,CACfC,cAAe,CACdC,KAAM,gBACNC,UAAWV,IAgBb,OACC,yBAAKW,UAAW,UAAUC,MAASX,EAAMW,OAExC,yBAAKD,UAAU,mBAAmBC,MAAK,2BACnCX,EAAMW,OAD6B,IAEtCC,OAAQZ,EAAMa,KAAO,UAAY,QAEjC,kBAAC,IAAD,CACCC,WAAa,gBACbR,QAAWA,EACXS,aAtBJ,SAAsBC,EAAIC,QACEC,WAAjBC,cACTA,aAAaC,QAAQJ,EAAIC,IAqBvBI,YAjBJ,SAAqBL,GACpB,QAA4BE,WAAjBC,aACV,OAAOA,aAAaG,QAAQN,IAgB1Bf,GAAI,CACHG,SAAUJ,EAAMI,aAMnBJ,EAAMa,KAAO,yBAAKH,UAAU,cAC5B,kBAAC,IAAD,CAAMM,GAAIhB,EAAMa,QACR,Q,wJCxDI,SAASU,IAIvB,IAAMC,EAAe,WAAK,IAElBC,EAASvB,cAATuB,MACP,SAASC,IACRD,EAAME,KAAK,kBAAC,IAAD,qBAJY,MAOcC,oBAAS,GAPvB,mBAOjBC,EAPiB,KAOJC,EAPI,KASxB,OAAQ,6BACP,kBAAC,IAAD,CAAYC,QAAS,kBAAMD,GAAgBD,IAAcG,QAASH,EAAc,WAAa,YAA7F,iBAIA,kBAAC,IAAD,CAAUI,QAAM,EAACC,MAAOL,EAAc,cAAgB,gBAAiBM,OAAQN,GAC9E,kBAAC,IAAD,CAAYE,QAASL,GAArB,mBACA,kBAAC,IAAD,CAAYK,QAASL,GAArB,mBACA,kBAAC,IAAD,CAAYK,QAASL,GAArB,mBACA,kBAAC,IAAD,CAAYS,QAAQ,EAAOJ,QAASL,GAApC,8BAKH,OACC,6BACC,2CADD,uPAKC,qDALD,0NAQC,6BARD,kJAUC,4BACA,kBAAC,IAAD,CAASb,KAAK,oCACb,kBAACW,EAAD","file":"static/js/17.99bce8f7.chunk.js","sourcesContent":["import React from 'react'\nimport './Example.css'\nimport {TouchPointApp, useSystem, Module} from 'touchpoint-ui'\nimport Gist from 'react-gist'\nimport propTypes from 'prop-types'\n\nfunction ExampleContent(props){\n\t\n\tconst {io} = useSystem()\n\t\n\treturn(\n\t\t<Module moduleName='ExampleModule'>\n\t\t\t{io.children}\n\t\t</Module>\n\t)\n\t\n}\n\n//...\nexport default function Example(props) {\n\t\n\tconst modules = {\n\t\tExampleModule: {\n\t\t\tname: 'ExampleModule',\n\t\t\tcomponent: ExampleContent\n\t\t}\n\t}\n\t\n\tfunction saveSettings(id, token){\n\t\tif(typeof localStorage !== undefined){\n\t\t\tlocalStorage.setItem(id, token)\n\t\t}\n\t}\n\t\n\tfunction getSettings(id) {\n\t\tif (typeof localStorage !== undefined) {\n\t\t\treturn localStorage.getItem(id)\n\t\t}\n\t}\n\t\n\treturn (\n\t\t<div className= 'Example' style = {props.style}>\n\t\t\t\n\t\t\t<div className=\"exampleContainer\" style={{ \n\t\t\t\t...props.style, \n\t\t\t\tmargin: props.gist ? '0px 7px' : null,\n\t\t\t}}>\n\t\t\t\t<TouchPointApp\n\t\t\t\t\thomeModule = 'ExampleModule'\n\t\t\t\t\tmodules = {modules}\n\t\t\t\t\tsaveSettings = {saveSettings}\n\t\t\t\t\tgetSettings = {getSettings}\n\t\t\t\t\tio={{\n\t\t\t\t\t\tchildren: props.children\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\n\t\t\n\t\t{props.gist ? <div className='sourceCode'>\n\t\t\t<Gist id={props.gist} />\n\t\t</div> : null}\n\n\t</div>\n\t)\n}\n\nExample.propTypes = {\n\tgist: propTypes.string\n}","import React, {useState} from 'react'\nimport Example from '../Components/Example'\nimport Gist from 'react-gist'\nimport { InfoCard, FreeButton, useSystem, PopupCard} from 'touchpoint-ui'\n\nexport default function Permissions() {\n\t\n\t\n\t\n\tconst InnerComponent=()=>{\n\t\t\n\t\tconst {Popup} = useSystem()\n\t\tfunction clickHandler() {\n\t\t\tPopup.open(<PopupCard>Hello World</PopupCard>)\n\t\t}\n\t\t\n\t\tconst [lockedState, setLockedState] = useState(true)\n\t\t\n\t\treturn (<div>\n\t\t\t<FreeButton onClick={() => setLockedState(!lockedState)} purpose={lockedState ? 'negative' : 'positive'}>\n\t\t\t\tToggle Locked\n\t\t\t</FreeButton>\n\t\t\t\n\t\t\t<InfoCard stripe title={lockedState ? 'Locked Card' : 'Unlocked Card'} locked={lockedState}>\n\t\t\t\t<FreeButton onClick={clickHandler}>Inherits Locked</FreeButton>\n\t\t\t\t<FreeButton onClick={clickHandler}>Inherits Locked</FreeButton>\n\t\t\t\t<FreeButton onClick={clickHandler}>Inherits Locked</FreeButton>\n\t\t\t\t<FreeButton locked={false} onClick={clickHandler}>Unlocked No Matter what</FreeButton>\n\t\t\t</InfoCard>\n\t\t</div>)\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<h1>Permissions</h1>\n\t\t\tYou can change weather a component is hidden or visible, or put it in read only mode, based on any input you like (typically the signed in user and their access rights).\n\t\t\tAlmost all TouchPoint components will accept a 'locked' and 'hidden' prop. \n\t\t\t\n\t\t\t<h3>Inherited Permissions</h3>\n\t\t\tAny locked container will also lock all it's children. This is the case no matter how deeply nested the children are.\n\t\t\tIf a component is locked by it's parent container, you can override it by setting locked = false. \n\t\t\t<br/>\n\t\t\tIn the example below, the container is locked, aso all content will be locked, except the one button where we intentionally set locked = false. \n\t\t\t<p></p>\n\t\t\t<Example gist='1b1b190bf3b020c59ca1403aa24c8228'>\n\t\t\t\t<InnerComponent/>\n\t\t\t</Example>\n\t\t\t\n\t\t</div>\n\t)\n}\n"],"sourceRoot":""}