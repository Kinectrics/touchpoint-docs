{"version":3,"sources":["Components/Example.js","Docs/CreateModule.js"],"names":["ExampleContent","props","io","useSystem","moduleName","children","Example","modules","ExampleModule","name","component","className","style","margin","gist","homeModule","saveSettings","id","token","undefined","localStorage","setItem","getSettings","getItem","CreateModule","stripe","width","color","to"],"mappings":"gNAMA,SAASA,EAAeC,GAAO,IAEvBC,EAAMC,cAAND,GAEP,OACC,kBAAC,IAAD,CAAQE,WAAW,iBACjBF,EAAGG,UAOQ,SAASC,EAAQL,GAE/B,IAAMM,EAAU,CACfC,cAAe,CACdC,KAAM,gBACNC,UAAWV,IAgBb,OACC,yBAAKW,UAAW,UAAUC,MAASX,EAAMW,OAExC,yBAAKD,UAAU,mBAAmBC,MAAK,2BACnCX,EAAMW,OAD6B,IAEtCC,OAAQZ,EAAMa,KAAO,UAAY,QAEjC,kBAAC,IAAD,CACCC,WAAa,gBACbR,QAAWA,EACXS,aAtBJ,SAAsBC,EAAIC,QACEC,WAAjBC,cACTA,aAAaC,QAAQJ,EAAIC,IAqBvBI,YAjBJ,SAAqBL,GACpB,QAA4BE,WAAjBC,aACV,OAAOA,aAAaG,QAAQN,IAgB1Bf,GAAI,CACHG,SAAUJ,EAAMI,aAMnBJ,EAAMa,KAAO,yBAAKH,UAAU,cAC5B,kBAAC,IAAD,CAAMM,GAAIhB,EAAMa,QACR,Q,qDC7DX,mGAMe,SAASU,IAEvB,OACC,6BACC,+CADD,sDAGC,6BAHD,0NAMC,4BAEA,kBAAC,IAAD,CAASV,KAAK,oCACb,mDAEA,kBAAC,IAAD,CAAUW,QAAM,EAACb,MAAO,CAACc,MAAO,QAAhC,SAIA,kBAAC,IAAD,CAAUD,QAAM,EAACb,MAAO,CAACc,MAAO,QAAhC,UAKD,wBAAId,MAAQ,CAACe,MAAO,yBAApB,iCApBD,qJAsBuD,kBAAC,OAAD,CAAMC,GAAG,mBAAT,QAtBvD,IAuBC,6BAvBD,wNA0BC,6BA1BD,yGA6BC,kBAAC,IAAD,CAAMX,GAAG,qCA7BV,iKAgCC,6BAhCD,2CAiCyC,kBAAC,OAAD,CAAMW,GAAG,mBAAT,6CAjCzC,iCAmCC,6BACA,6BApCD,uNAwCC,iDAxCD,qTA2CS,kBAAC,OAAD,CAAMA,GAAG,qBAAT,oBA3CT,qBA6CC,kBAAC,IAAD,CAAMX,GAAG","file":"static/js/18.40b31aa8.chunk.js","sourcesContent":["import React from 'react'\nimport './Example.css'\nimport {TouchPointApp, useSystem, Module} from 'touchpoint-ui'\nimport Gist from 'react-gist'\nimport propTypes from 'prop-types'\n\nfunction ExampleContent(props){\n\t\n\tconst {io} = useSystem()\n\t\n\treturn(\n\t\t<Module moduleName='ExampleModule'>\n\t\t\t{io.children}\n\t\t</Module>\n\t)\n\t\n}\n\n//...\nexport default function Example(props) {\n\t\n\tconst modules = {\n\t\tExampleModule: {\n\t\t\tname: 'ExampleModule',\n\t\t\tcomponent: ExampleContent\n\t\t}\n\t}\n\t\n\tfunction saveSettings(id, token){\n\t\tif(typeof localStorage !== undefined){\n\t\t\tlocalStorage.setItem(id, token)\n\t\t}\n\t}\n\t\n\tfunction getSettings(id) {\n\t\tif (typeof localStorage !== undefined) {\n\t\t\treturn localStorage.getItem(id)\n\t\t}\n\t}\n\t\n\treturn (\n\t\t<div className= 'Example' style = {props.style}>\n\t\t\t\n\t\t\t<div className=\"exampleContainer\" style={{ \n\t\t\t\t...props.style, \n\t\t\t\tmargin: props.gist ? '0px 7px' : null,\n\t\t\t}}>\n\t\t\t\t<TouchPointApp\n\t\t\t\t\thomeModule = 'ExampleModule'\n\t\t\t\t\tmodules = {modules}\n\t\t\t\t\tsaveSettings = {saveSettings}\n\t\t\t\t\tgetSettings = {getSettings}\n\t\t\t\t\tio={{\n\t\t\t\t\t\tchildren: props.children\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\n\t\t\n\t\t{props.gist ? <div className='sourceCode'>\n\t\t\t<Gist id={props.gist} />\n\t\t</div> : null}\n\n\t</div>\n\t)\n}\n\nExample.propTypes = {\n\tgist: propTypes.string\n}","import React from 'react'\nimport Example from '../Components/Example'\nimport Gist from 'react-gist'\nimport {InfoCard} from 'touchpoint-ui'\nimport { Link } from 'react-router-dom'\n\nexport default function CreateModule() {\n\n\treturn (\n\t\t<div>\n\t\t\t<h1>Create a module</h1>\n\t\t\tTo add a new module to an exisiting TouchPoint app.\n\t\t\t<br/> \n\t\t\tFirst, you need to create the React component for yoru module. This can contain anything you like, as long as it's wrapped in a Module component.\n\t\t\tThe example below is a very simple (and kind of useless) test module. \n\t\t\t<p></p>\n\t\t\t\n\t\t\t<Example gist='b8bb059e3a34a358c530a256d2377dce'>\n\t\t\t\t<h2>Hello World Module!</h2>\n\t\t\t\t\n\t\t\t\t<InfoCard stripe style={{width: '50%'}}>\n\t\t\t\t\tHello\n\t\t\t\t</InfoCard>\n\t\t\t\t\n\t\t\t\t<InfoCard stripe style={{width: '50%'}}>\n\t\t\t\t\tWorld\n\t\t\t\t</InfoCard>\n\t\t\t</Example>\n\t\t\t\n\t\t\t<h3 style ={{color: 'var(--mainTextColor)'}}>Adding your module to the app</h3>\n\t\t\tNow that you've created the component, you have to add it to the app so it can be rendered. \n\t\t\tIf you don't already have a TouchPoint App set up, go <Link to='/Docs/CreateApp'>here</Link>.\n\t\t\t<br/>\n\t\t\tTo add your module to the app, navigate to the top level App.js file. This is where your TouchPointApp component is created. \n\t\t\tHere you can add the module to the 'modules' object that's passed to your TouchPointApp. \n\t\t\t<br/>\n\t\t\tThe example\tapp below already has one module, called Lockscreen. We'll add the HelloWorldModule to it. \n\t\t\t\n\t\t\t<Gist id='88e29434c7f7f17105323e1f8d6002ca'/>\n\t\t\t\n\t\t\tNow you can navigate to the url 'yourappname.com/#/HelloWorldModule' to access the new module. The routing is already set up for you inside the TouchPointApp.\n\t\t\t<br/>\n\t\t\tYou can also open the module by calling <Link to='/Docs/SystemAPI'>System.Modules.open( 'HelloWorldModule' )</Link> from anywhere within the app. \n\t\t\t\n\t\t\t<br/>\n\t\t\t<br/>\n\t\t\t\n\t\t\tYou can also hide your module by setting hidden = true in the object above, based on the active user's permissions. This will make the module inaccessible, and will stop it from appearing anywhere inside the app. \n\t\t\t\n\t\t\t<h3>Read-only modules</h3>\n\t\t\tLike any other container, you can make the module read-only by passing locked = true to the Module component. \n\t\t\tThis will put the module, and any compones inside (that support permissions) in read-only mode. Note that you can override this for any component in the module, by setting locked = false. \n\t\t\tSee the <Link to='/Docs/Permissions'>Permissions docs</Link> for more on this. \n\t\t\t\n\t\t\t<Gist id='88e29434c7f7f17105323e1f8d6002ca' />\n\t\t\t\n\t\t</div>\n\t)\n}\n"],"sourceRoot":""}