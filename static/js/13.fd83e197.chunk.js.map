{"version":3,"sources":["Docs/Popups.js","Components/Example.js","Components/PropList.js","Components/Note.js"],"names":["Popups","InnerPopup","Popup","useSystem","onClick","open","title","to","gist","items","name","type","desc","ExampleContent","props","io","moduleName","children","Example","modules","ExampleModule","component","className","style","margin","homeModule","saveSettings","id","token","undefined","localStorage","setItem","getSettings","getItem","PropList","map","p","i","key","Note"],"mappings":"2HAAA,2GAOe,SAASA,IAEvB,SAASC,IAAa,IACdC,EAASC,cAATD,MAQP,OAAO,kBAAC,IAAD,CAAYE,QANnB,WACCF,EAAMG,KAAK,kBAAC,IAAD,CAAWC,MAAO,iBAAlB,mBAKL,cAGR,OACC,6BACC,sCADD,gMAIC,gDAJD,qEAKmE,kBAAC,OAAD,CAAMC,GAAG,mBAAT,cALnE,IAMC,6BAND,uDAOC,6BAPD,oHASC,kBAAC,IAAD,CAASC,KAAK,oCACb,kBAACP,EAAD,OAGD,mDAbD,sGAgBC,kBAAC,IAAD,CAAUK,MAAM,kBAAkBG,MAAO,CACxC,CAACC,KAAK,QAASC,KAAK,SAAUC,KAAM,sBACpC,CAACF,KAAK,SAAUC,KAAK,cAAeC,KAAM,+CAC1C,CAACF,KAAK,UAAWC,KAAK,cAAeC,KAAM,+CAC3C,CAACF,KAAK,YAAaC,KAAK,UAAWC,KAAM,qIACzC,CAACF,KAAK,cAAeC,KAAK,qBAAsBC,KAAM,iCACtD,CAACF,KAAK,QAASC,KAAK,iBAAkBC,KAAM,2BAC5C,CAACF,KAAK,SAAUC,KAAK,UAAWC,KAAM,qCAGvC,kBAAC,IAAD,uF,sHC1CH,SAASC,EAAeC,GAAO,IAEvBC,EAAMZ,cAANY,GAEP,OACC,kBAAC,IAAD,CAAQC,WAAW,iBACjBD,EAAGE,UAOQ,SAASC,EAAQJ,GAE/B,IAAMK,EAAU,CACfC,cAAe,CACdV,KAAM,gBACNW,UAAWR,IAgBb,OACC,yBAAKS,UAAW,UAAUC,MAAST,EAAMS,OAExC,yBAAKD,UAAU,mBAAmBC,MAAK,2BACnCT,EAAMS,OAD6B,IAEtCC,OAAQV,EAAMN,KAAO,UAAY,QAEjC,kBAAC,IAAD,CACCiB,WAAa,gBACbN,QAAWA,EACXO,aAtBJ,SAAsBC,EAAIC,QACEC,WAAjBC,cACTA,aAAaC,QAAQJ,EAAIC,IAqBvBI,YAjBJ,SAAqBL,GACpB,QAA4BE,WAAjBC,aACV,OAAOA,aAAaG,QAAQN,IAgB1BZ,GAAI,CACHE,SAAUH,EAAMG,aAMnBH,EAAMN,KAAO,yBAAKc,UAAU,cAC5B,kBAAC,IAAD,CAAMK,GAAIb,EAAMN,QACR,Q,qDC7DX,4DAIe,SAAS0B,EAASpB,GAChC,OACC,yBAAKQ,UAAU,YACd,4BAAKR,EAAMR,MAAQQ,EAAMR,MAAQ,SAEjC,+BACC,+BACEQ,EAAML,MAAM0B,KAAI,SAACC,EAAGC,GACpB,OAAO,wBAAIC,IAAOD,GACjB,wBAAIf,UAAU,QAAQc,EAAE1B,MACxB,wBAAIY,UAAU,QAAQc,EAAEzB,MACxB,wBAAIW,UAAU,QAAQc,EAAExB,e,qDCf/B,sDAEe,SAAS2B,EAAKzB,GAE5B,OACC,yBAAKQ,UAAW,OAAQC,MAAOT,EAAMS,OACpC,2BAAIT,EAAMG","file":"static/js/13.fd83e197.chunk.js","sourcesContent":["import React from 'react'\nimport Example from '../Components/Example'\nimport Note from '../Components/Note'\nimport { Link } from 'react-router-dom'\nimport { FreeButton, useSystem, PopupCard } from 'touchpoint-ui'\nimport PropList from '../Components/PropList'\n\nexport default function Popups() {\n\t\n\tfunction InnerPopup(){\n\t\tconst {Popup} = useSystem()\n\t\t\n\t\tfunction clickHandler(){\n\t\t\tPopup.open(<PopupCard title ='TouchPoint UI'>\n\t\t\t\tHello there!\n\t\t\t</PopupCard>)\n\t\t}\n\t\t\n\t\treturn(<FreeButton onClick={clickHandler}>Open Popup</FreeButton>)\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<h1>Popups</h1>\n\t\t\tCreate interactive information dialogs for your users. If you open multiple popups in a row, only the latest one will be displayed on the screen, but all the components will remain mounted. \n\t\t\t\n\t\t\t<h3>Creating a popup</h3>\n\t\t\tYou can create popups anywhere in your TouchPoint app through the <Link to='/Docs/SystemAPI'>System API</Link>.\n\t\t\t<br/>To open a popup, use System.Popup.open( JSXContent )\n\t\t\t<br/>To close the open popup. use System.Popup.close( ) or System.Popup.closeAll( ) if there are multiple popups open.\n\t\t\t\n\t\t\t<Example gist='8d0898a7cc5467a8d4855eb7aaf33cd2'>\n\t\t\t\t<InnerPopup/>\n\t\t\t</Example>\n\t\t\t\n\t\t\t<h3>PopupCard Component</h3>\n\t\t\tThe container for all your popup content. By default, clicking the background will close the popup.\n\t\t\t\n\t\t\t<PropList title='PopupCard props' items={[\n\t\t\t\t{name:'title', type:'string', desc: 'Title for the card'},\n\t\t\t\t{name:'onOpen', type:'function( )', desc: 'Callback that runs when the popup is opened'},\n\t\t\t\t{name:'onClose', type:'function( )', desc: 'Callback that runs when the popup is closed'},\n\t\t\t\t{name:'forceOpen', type:'boolean', desc: 'Removes the close button and disables clicking the background to close. Make sure you implement your own way of closing the popup'},\n\t\t\t\t{name:'stripeColor', type:'string (css color)', desc: 'Colors the stripe of the card'},\n\t\t\t\t{name:'style', type:'object (style)', desc: 'Optional custom styling'},\n\t\t\t\t{name:'locked', type:'boolean', desc: 'Locks all content in the popup'},\n\t\t\t]}/>\n\t\t\t\n\t\t\t<Note>Note: by default popups do not inherit a locked prop from a parent module. </Note>\n\t\t\t\n\t\t</div>\n\t)\n}\n","import React from 'react'\nimport './Example.css'\nimport {TouchPointApp, useSystem, Module} from 'touchpoint-ui'\nimport Gist from 'react-gist'\nimport propTypes from 'prop-types'\n\nfunction ExampleContent(props){\n\t\n\tconst {io} = useSystem()\n\t\n\treturn(\n\t\t<Module moduleName='ExampleModule'>\n\t\t\t{io.children}\n\t\t</Module>\n\t)\n\t\n}\n\n//...\nexport default function Example(props) {\n\t\n\tconst modules = {\n\t\tExampleModule: {\n\t\t\tname: 'ExampleModule',\n\t\t\tcomponent: ExampleContent\n\t\t}\n\t}\n\t\n\tfunction saveSettings(id, token){\n\t\tif(typeof localStorage !== undefined){\n\t\t\tlocalStorage.setItem(id, token)\n\t\t}\n\t}\n\t\n\tfunction getSettings(id) {\n\t\tif (typeof localStorage !== undefined) {\n\t\t\treturn localStorage.getItem(id)\n\t\t}\n\t}\n\t\n\treturn (\n\t\t<div className= 'Example' style = {props.style}>\n\t\t\t\n\t\t\t<div className=\"exampleContainer\" style={{ \n\t\t\t\t...props.style, \n\t\t\t\tmargin: props.gist ? '0px 7px' : null,\n\t\t\t}}>\n\t\t\t\t<TouchPointApp\n\t\t\t\t\thomeModule = 'ExampleModule'\n\t\t\t\t\tmodules = {modules}\n\t\t\t\t\tsaveSettings = {saveSettings}\n\t\t\t\t\tgetSettings = {getSettings}\n\t\t\t\t\tio={{\n\t\t\t\t\t\tchildren: props.children\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\n\t\t\n\t\t{props.gist ? <div className='sourceCode'>\n\t\t\t<Gist id={props.gist} />\n\t\t</div> : null}\n\n\t</div>\n\t)\n}\n\nExample.propTypes = {\n\tgist: propTypes.string\n}","import React from 'react'\nimport propTypes from 'prop-types'\nimport './PropList.css'\n\nexport default function PropList(props) {\n\treturn (\n\t\t<div className='PropList'>\n\t\t\t<h5>{props.title ? props.title : 'Props'}</h5>\n\t\t\t\n\t\t\t<table>\n\t\t\t\t<tbody>\n\t\t\t\t\t{props.items.map((p, i)=>{\n\t\t\t\t\t\treturn <tr key = {i}>\n\t\t\t\t\t\t\t<td className='name'>{p.name}</td>\n\t\t\t\t\t\t\t<td className='type'>{p.type}</td>\n\t\t\t\t\t\t\t<td className='desc'>{p.desc}</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t})}\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</div>\n\t)\n}\n\n//\nPropList.propTypes={\n\titems: propTypes.arrayOf(propTypes.shape({\n\t\tname: propTypes.string,\n\t\ttype: propTypes.string,\n\t\tdesc: propTypes.string,\n\t})).isRequired,\n\ttitle: propTypes.string,\n}","import React from 'react'\n\nexport default function Note(props) {\n\t\n\treturn (\n\t\t<div className={'Note'} style={props.style}>\n\t\t\t<i>{props.children}</i>\n\t\t</div>\n\t)\n}\n\n\n"],"sourceRoot":""}