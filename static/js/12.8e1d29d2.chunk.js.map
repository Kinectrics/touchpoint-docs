{"version":3,"sources":["Docs/Buttons.js","Components/Example.js","Components/PropList.js"],"names":["Buttons","gist","purpose","style","margin","locked","title","items","name","type","desc","id","ExampleContent","props","io","useSystem","moduleName","children","Example","modules","ExampleModule","component","className","homeModule","saveSettings","token","undefined","localStorage","setItem","getSettings","getItem","PropList","map","p","i","key"],"mappings":"2HAAA,2FAKe,SAASA,IAEvB,OACC,6BACC,iDAEA,0CAHD,0BAMC,4BACA,kBAAC,IAAD,CAASC,KAAK,oCACb,kBAAC,IAAD,CAAYC,QAAQ,WAAWC,MAAO,CAACC,OAAO,SAA9C,YACA,kBAAC,IAAD,CAAYF,QAAQ,WAAWC,MAAO,CAAEC,OAAQ,SAAhD,YACA,kBAAC,IAAD,CAAYD,MAAO,CAAEC,OAAQ,SAA7B,WACA,kBAAC,IAAD,CAAYC,QAAM,EAACF,MAAO,CAAEC,OAAQ,SAApC,WAGD,kBAAC,IAAD,CAAUE,MAAM,mBAAmBC,MAAO,CACzC,CAACC,KAAK,UAAWC,KAAM,aAAcC,KAAM,uBAC3C,CAACF,KAAK,UAAWC,KAAM,SAAUC,KAAM,2FACvC,CAACF,KAAK,SAAUC,KAAM,UAAWC,KAAM,sCACvC,CAACF,KAAK,SAAUC,KAAM,UAAWC,KAAM,+BACvC,CAACF,KAAK,QAASC,KAAM,iBAAkBC,KAAM,8BAG9C,wBAAIC,GAAG,cAAP,cAtBD,gFAyBC,kBAAC,IAAD,CAAUL,MAAM,mBAAmBC,MAAO,CACzC,CAAEC,KAAM,UAAWC,KAAM,aAAcC,KAAM,uBAC7C,CAAEF,KAAM,SAAUC,KAAM,UAAWC,KAAM,sCACzC,CAAEF,KAAM,SAAUC,KAAM,UAAWC,KAAM,+BACzC,CAAEF,KAAM,QAASC,KAAM,iBAAkBC,KAAM,2BAC/C,CAAEF,KAAM,YAAaC,KAAM,SAAUC,KAAM,2CAG5C,wBAAIC,GAAK,QAAT,QAjCD,4BAoCC,kBAAC,IAAD,CAAUL,MAAM,aAAaC,MAAO,CACnC,CAAEC,KAAM,UAAWC,KAAM,aAAcC,KAAM,uBAC7C,CAAEF,KAAM,QAASC,KAAM,SAAUC,KAAM,yBACvC,CAAEF,KAAM,SAAUC,KAAM,UAAWC,KAAM,sCACzC,CAAEF,KAAM,SAAUC,KAAM,UAAWC,KAAM,+BACzC,CAAEF,KAAM,QAASC,KAAM,iBAAkBC,KAAM,iC,sHC3CnD,SAASE,EAAeC,GAAO,IAEvBC,EAAMC,cAAND,GAEP,OACC,kBAAC,IAAD,CAAQE,WAAW,iBACjBF,EAAGG,UAOQ,SAASC,EAAQL,GAE/B,IAAMM,EAAU,CACfC,cAAe,CACdZ,KAAM,gBACNa,UAAWT,IAgBb,OACC,yBAAKU,UAAW,UAAUnB,MAASU,EAAMV,OAExC,yBAAKmB,UAAU,mBAAmBnB,MAAK,2BACnCU,EAAMV,OAD6B,IAEtCC,OAAQS,EAAMZ,KAAO,UAAY,QAEjC,kBAAC,IAAD,CACCsB,WAAa,gBACbJ,QAAWA,EACXK,aAtBJ,SAAsBb,EAAIc,QACEC,WAAjBC,cACTA,aAAaC,QAAQjB,EAAIc,IAqBvBI,YAjBJ,SAAqBlB,GACpB,QAA4Be,WAAjBC,aACV,OAAOA,aAAaG,QAAQnB,IAgB1BG,GAAI,CACHG,SAAUJ,EAAMI,aAMnBJ,EAAMZ,KAAO,yBAAKqB,UAAU,cAC5B,kBAAC,IAAD,CAAMX,GAAIE,EAAMZ,QACR,Q,qDC7DX,4DAIe,SAAS8B,EAASlB,GAChC,OACC,yBAAKS,UAAU,YACd,4BAAKT,EAAMP,MAAQO,EAAMP,MAAQ,SAEjC,+BACC,+BACEO,EAAMN,MAAMyB,KAAI,SAACC,EAAGC,GACpB,OAAO,wBAAIC,IAAOD,GACjB,wBAAIZ,UAAU,QAAQW,EAAEzB,MACxB,wBAAIc,UAAU,QAAQW,EAAExB,MACxB,wBAAIa,UAAU,QAAQW,EAAEvB,e","file":"static/js/12.8e1d29d2.chunk.js","sourcesContent":["import React from 'react'\nimport Example from '../Components/Example'\nimport {FreeButton, CoreButton} from 'touchpoint-ui'\nimport PropList from '../Components/PropList'\n\nexport default function Buttons() {\n\n\treturn (\n\t\t<div>\n\t\t\t<h1>Button Components</h1>\n\t\t\t\n\t\t\t<h3>FreeButton</h3>\n\t\t\tJust a good old button.\n\t\t\t\n\t\t\t<p></p>\n\t\t\t<Example gist='64207f81481cc7ec03c85a7fe4dc20c6'>\n\t\t\t\t<FreeButton purpose='positive' style={{margin:'10px'}}>Positive</FreeButton>\n\t\t\t\t<FreeButton purpose='negative' style={{ margin: '10px' }}>Negative</FreeButton>\n\t\t\t\t<FreeButton style={{ margin: '10px' }}>Default</FreeButton>\n\t\t\t\t<FreeButton locked style={{ margin: '10px' }}>Locked</FreeButton>\n\t\t\t</Example>\n\t\t\t\n\t\t\t<PropList title='FreeButton props' items={[\n\t\t\t\t{name:'onClick', type: 'function()', desc: 'Click event handler'},\n\t\t\t\t{name:'purpose', type: 'string', desc: 'Can be positive, negative, or none. Decides the color of the button based on your theme'},\n\t\t\t\t{name:'locked', type: 'boolean', desc: 'Locks the button to disable clicks'},\n\t\t\t\t{name:'hidden', type: 'boolean', desc: 'Hides the button completely'},\n\t\t\t\t{name:'style', type: 'object (style)', desc: 'Optional custom styling'},\n\t\t\t]}/>\n\t\t\t\n\t\t\t<h3 id='CoreButton'>CoreButton</h3>\n\t\t\tA plain button that takes its style from its surroundigs (or custom styling). \n\t\t\t\n\t\t\t<PropList title='CoreButton props' items={[\n\t\t\t\t{ name: 'onClick', type: 'function()', desc: 'Click event handler' },\n\t\t\t\t{ name: 'locked', type: 'boolean', desc: 'Locks the button to disable clicks' },\n\t\t\t\t{ name: 'hidden', type: 'boolean', desc: 'Hides the button completely' },\n\t\t\t\t{ name: 'style', type: 'object (style)', desc: 'Optional custom styling' },\n\t\t\t\t{ name: 'className', type: 'string', desc: 'Add your own classname to the button' },\n\t\t\t]} />\n\t\t\t\n\t\t\t<h3 id = 'Tile'>Tile</h3>\n\t\t\tAn app icon style button. \n\t\t\t\n\t\t\t<PropList title='Tile props' items={[\n\t\t\t\t{ name: 'onClick', type: 'function()', desc: 'Click event handler' },\n\t\t\t\t{ name: 'title', type: 'string', desc: 'The title on the tile' },\n\t\t\t\t{ name: 'locked', type: 'boolean', desc: 'Locks the button to disable clicks' },\n\t\t\t\t{ name: 'hidden', type: 'boolean', desc: 'Hides the button completely' },\n\t\t\t\t{ name: 'style', type: 'object (style)', desc: 'Optional custom styling' },\n\t\t\t]} />\n\t\t\t\n\t\t</div>\n\t)\n}\n","import React from 'react'\nimport './Example.css'\nimport {TouchPointApp, useSystem, Module} from 'touchpoint-ui'\nimport Gist from 'react-gist'\nimport propTypes from 'prop-types'\n\nfunction ExampleContent(props){\n\t\n\tconst {io} = useSystem()\n\t\n\treturn(\n\t\t<Module moduleName='ExampleModule'>\n\t\t\t{io.children}\n\t\t</Module>\n\t)\n\t\n}\n\n//...\nexport default function Example(props) {\n\t\n\tconst modules = {\n\t\tExampleModule: {\n\t\t\tname: 'ExampleModule',\n\t\t\tcomponent: ExampleContent\n\t\t}\n\t}\n\t\n\tfunction saveSettings(id, token){\n\t\tif(typeof localStorage !== undefined){\n\t\t\tlocalStorage.setItem(id, token)\n\t\t}\n\t}\n\t\n\tfunction getSettings(id) {\n\t\tif (typeof localStorage !== undefined) {\n\t\t\treturn localStorage.getItem(id)\n\t\t}\n\t}\n\t\n\treturn (\n\t\t<div className= 'Example' style = {props.style}>\n\t\t\t\n\t\t\t<div className=\"exampleContainer\" style={{ \n\t\t\t\t...props.style, \n\t\t\t\tmargin: props.gist ? '0px 7px' : null,\n\t\t\t}}>\n\t\t\t\t<TouchPointApp\n\t\t\t\t\thomeModule = 'ExampleModule'\n\t\t\t\t\tmodules = {modules}\n\t\t\t\t\tsaveSettings = {saveSettings}\n\t\t\t\t\tgetSettings = {getSettings}\n\t\t\t\t\tio={{\n\t\t\t\t\t\tchildren: props.children\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\n\t\t\n\t\t{props.gist ? <div className='sourceCode'>\n\t\t\t<Gist id={props.gist} />\n\t\t</div> : null}\n\n\t</div>\n\t)\n}\n\nExample.propTypes = {\n\tgist: propTypes.string\n}","import React from 'react'\nimport propTypes from 'prop-types'\nimport './PropList.css'\n\nexport default function PropList(props) {\n\treturn (\n\t\t<div className='PropList'>\n\t\t\t<h5>{props.title ? props.title : 'Props'}</h5>\n\t\t\t\n\t\t\t<table>\n\t\t\t\t<tbody>\n\t\t\t\t\t{props.items.map((p, i)=>{\n\t\t\t\t\t\treturn <tr key = {i}>\n\t\t\t\t\t\t\t<td className='name'>{p.name}</td>\n\t\t\t\t\t\t\t<td className='type'>{p.type}</td>\n\t\t\t\t\t\t\t<td className='desc'>{p.desc}</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t})}\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</div>\n\t)\n}\n\n//\nPropList.propTypes={\n\titems: propTypes.arrayOf(propTypes.shape({\n\t\tname: propTypes.string,\n\t\ttype: propTypes.string,\n\t\tdesc: propTypes.string,\n\t})).isRequired,\n\ttitle: propTypes.string,\n}"],"sourceRoot":""}