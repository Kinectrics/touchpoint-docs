{"version":3,"sources":["Docs/MenuButton.js","Components/Example.js"],"names":["MyCustomMenu","useState","value","setValue","onClick","stripe","MenuButtonDocs","gist","style","backgroundColor","borderRadius","menuContent","ExampleContent","props","io","useSystem","moduleName","children","Example","modules","ExampleModule","name","component","className","margin","homeModule","saveSettings","id","token","undefined","localStorage","setItem","getSettings","getItem"],"mappings":"sNAMA,SAASA,IAAe,IAAD,EACIC,mBAAS,GADb,mBACfC,EADe,KACRC,EADQ,KAGtB,OACC,6BACC,4BAAQC,QAAS,kBAAID,EAASD,EAAM,KAApC,YACA,4BAAQE,QAAS,kBAAMD,EAASD,EAAQ,KAAxC,YAEA,kBAAC,IAAD,CAAUG,QAAM,GACf,0CAAuBH,IAOZ,SAASI,IAEvB,OACC,6BACC,0CADD,qEAGC,6BAHD,+PAMC,6BACA,6BAPD,qEASC,4BAEA,kBAAC,IAAD,CAASC,KAAM,oCAEd,kBAAC,IAAD,CACCC,MAAQ,CAACC,gBAAiB,QAASC,aAAc,QACjDC,YACC,6BACC,4CACA,4CACA,4CACA,4CAEA,kBAAC,IAAD,CAAYA,YAAa,6BACxB,gDACA,gDACA,gDACA,kDAJD,mBATH,SAbF,0FAmCC,oDAnCD,wLAsCC,kBAAC,IAAD,CAASJ,KAAK,oCACb,kBAAC,IAAD,CACCC,MAAO,CAAEC,gBAAiB,QAASC,aAAc,QACjDC,YAAaX,GAFd,qB,sHC1DJ,SAASY,EAAeC,GAAO,IAEvBC,EAAMC,cAAND,GAEP,OACC,kBAAC,IAAD,CAAQE,WAAW,iBACjBF,EAAGG,UAOQ,SAASC,EAAQL,GAE/B,IAAMM,EAAU,CACfC,cAAe,CACdC,KAAM,gBACNC,UAAWV,IAgBb,OACC,yBAAKW,UAAW,UAAUf,MAASK,EAAML,OAExC,yBAAKe,UAAU,mBAAmBf,MAAK,2BACnCK,EAAML,OAD6B,IAEtCgB,OAAQX,EAAMN,KAAO,UAAY,QAEjC,kBAAC,IAAD,CACCkB,WAAa,gBACbN,QAAWA,EACXO,aAtBJ,SAAsBC,EAAIC,QACEC,WAAjBC,cACTA,aAAaC,QAAQJ,EAAIC,IAqBvBI,YAjBJ,SAAqBL,GACpB,QAA4BE,WAAjBC,aACV,OAAOA,aAAaG,QAAQN,IAgB1Bb,GAAI,CACHG,SAAUJ,EAAMI,aAMnBJ,EAAMN,KAAO,yBAAKgB,UAAU,cAC5B,kBAAC,IAAD,CAAMI,GAAId,EAAMN,QACR,Q","file":"static/js/19.94547f54.chunk.js","sourcesContent":["import React from 'react'\nimport Example from '../Components/Example'\nimport {MenuButton, InfoCard} from 'touchpoint-ui'\nimport { useState } from 'react'\n\n\nfunction MyCustomMenu(){\n\tconst [value, setValue] = useState(0)\n\t\n\treturn(\n\t\t<div>\n\t\t\t<button onClick={()=>setValue(value+1)}>Increase</button>\n\t\t\t<button onClick={() => setValue(value - 1)}>Decrease</button>\n\t\t\t\n\t\t\t<InfoCard stripe>\n\t\t\t\t<label>Value =</label>{value}\n\t\t\t</InfoCard>\n\t\t\t\n\t\t</div>\n\t)\n}\n\nexport default function MenuButtonDocs() {\n\n\treturn (\n\t\t<div>\n\t\t\t<h1>MenuButton</h1>\n\t\t\tCreate customizable dropdown menus, with support for nested menus. \n\t\t\t<br/>\n\t\t\tMenuButtons are similar regular buttons, except they take a menuContent prop (either a component, or some JSX) which becomes a dropdown menu. \n\t\t\tBy default, MenuButtons will blend into their surroundings, but you can pass a 'style' prop to customize them. \n\t\t\t<br/>\n\t\t\t<br/>\n\t\t\tMenus will break out of any container, even if overflow is hidden.\n\t\t\t<p></p>\n\t\t\t\n\t\t\t<Example gist= '62ea80fac1e40edd1e53ac9127344e14'>\n\t\t\t\t\t\n\t\t\t\t<MenuButton \n\t\t\t\t\tstyle ={{backgroundColor: 'white', borderRadius: '10px'}}\n\t\t\t\t\tmenuContent={\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<button>Option 1</button>\n\t\t\t\t\t\t\t<button>Option 2</button>\n\t\t\t\t\t\t\t<button>Option 3</button>\n\t\t\t\t\t\t\t<button>Option 4</button>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<MenuButton menuContent={<div>\n\t\t\t\t\t\t\t\t<button>More Options</button>\n\t\t\t\t\t\t\t\t<button>More Options</button>\n\t\t\t\t\t\t\t\t<button>More Options</button>\n\t\t\t\t\t\t\t\t<button>More Options</button>\n\t\t\t\t\t\t\t</div>}>Submenu Time!</MenuButton>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t}\n\t\t\t\t>Open</MenuButton>\n\t\t\t</Example>\n\t\t\t\n\t\t\tLike the example above, putting a menuButton inside the menuContent creates a sub menu.\n\n\t\t\t<h3>Complex Menu Content</h3>\n\t\t\tYou can put anything inside the menu, not just buttons. If you want to use hooks/state in the menuContent, define a component like normal, and pass it to the menuContent like below.\n\t\t\t\n\t\t\t<Example gist='051628434e5ccaee492cc6fa63221963'>\n\t\t\t\t<MenuButton\n\t\t\t\t\tstyle={{ backgroundColor: 'white', borderRadius: '10px' }}\n\t\t\t\t\tmenuContent={MyCustomMenu}\n\t\t\t\t>Complex Menus</MenuButton>\n\t\t\t</Example>\n\t\t\t\n\t\t</div>\n\t)\n}\n","import React from 'react'\nimport './Example.css'\nimport {TouchPointApp, useSystem, Module} from 'touchpoint-ui'\nimport Gist from 'react-gist'\nimport propTypes from 'prop-types'\n\nfunction ExampleContent(props){\n\t\n\tconst {io} = useSystem()\n\t\n\treturn(\n\t\t<Module moduleName='ExampleModule'>\n\t\t\t{io.children}\n\t\t</Module>\n\t)\n\t\n}\n\n//...\nexport default function Example(props) {\n\t\n\tconst modules = {\n\t\tExampleModule: {\n\t\t\tname: 'ExampleModule',\n\t\t\tcomponent: ExampleContent\n\t\t}\n\t}\n\t\n\tfunction saveSettings(id, token){\n\t\tif(typeof localStorage !== undefined){\n\t\t\tlocalStorage.setItem(id, token)\n\t\t}\n\t}\n\t\n\tfunction getSettings(id) {\n\t\tif (typeof localStorage !== undefined) {\n\t\t\treturn localStorage.getItem(id)\n\t\t}\n\t}\n\t\n\treturn (\n\t\t<div className= 'Example' style = {props.style}>\n\t\t\t\n\t\t\t<div className=\"exampleContainer\" style={{ \n\t\t\t\t...props.style, \n\t\t\t\tmargin: props.gist ? '0px 7px' : null,\n\t\t\t}}>\n\t\t\t\t<TouchPointApp\n\t\t\t\t\thomeModule = 'ExampleModule'\n\t\t\t\t\tmodules = {modules}\n\t\t\t\t\tsaveSettings = {saveSettings}\n\t\t\t\t\tgetSettings = {getSettings}\n\t\t\t\t\tio={{\n\t\t\t\t\t\tchildren: props.children\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\n\t\t\n\t\t{props.gist ? <div className='sourceCode'>\n\t\t\t<Gist id={props.gist} />\n\t\t</div> : null}\n\n\t</div>\n\t)\n}\n\nExample.propTypes = {\n\tgist: propTypes.string\n}"],"sourceRoot":""}